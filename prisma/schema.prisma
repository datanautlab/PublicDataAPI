// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model issuer {
  id   String @id @default(uuid())
  name String

  etfs etf[]
}

model etf {
  id                  String   @id @default(uuid())
  name                String
  isin                String   @unique
  issuer_id           String
  benchmark           String
  asset_class         String
  theme               String
  inception_date      DateTime
  investment_strategy String
  risk_level          String
  listing_exchange    String
  dividend_policy     String
  replication_method  String
  replication_model   String
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  issuer             issuer              @relation(fields: [issuer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  daily_info         etf_daily_info[]
  creation_units     creation_unit[]
  redemption_units   redemption_unit[]
  daily_compositions daily_composition[]

  @@index([isin])
}

model etf_daily_info {
  etf_id               String
  info_date            DateTime
  aum                  Decimal
  share_outstanding    Decimal
  nav                  Decimal
  expense_ratio        Decimal
  tracking_error       Decimal
  creation_unit_size   Int
  redemption_unit_size Int
  estimated_cash       Decimal
  derived_cash         Decimal
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt

  etf etf @relation(fields: [etf_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([etf_id, info_date])
}

model security {
  id         String   @id @default(uuid())
  name       String
  isin       String   @unique
  type       String
  sector     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  creation_units     creation_unit[]
  redemption_units   redemption_unit[]
  daily_compositions daily_composition[]

  @@index([isin])
}

model creation_unit {
  etf_id      String
  info_date   DateTime
  security_id String

  num_shares Decimal
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  etf      etf      @relation(fields: [etf_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  security security @relation(fields: [security_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([etf_id, info_date, security_id])
}

model redemption_unit {
  etf_id      String
  info_date   DateTime
  security_id String

  num_shares Decimal
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  etf      etf      @relation(fields: [etf_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  security security @relation(fields: [security_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([etf_id, info_date, security_id])
}

model daily_composition {
  etf_id      String
  info_date   DateTime
  security_id String

  num_shares        Decimal
  change_num_shares Decimal
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  etf      etf      @relation(fields: [etf_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  security security @relation(fields: [security_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([etf_id, info_date, security_id])
}
